rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.size < 5 * 1024 * 1024 // 5MB limit
        && request.resource.contentType.matches('image/.*');
    }
    
    function isValidDocument() {
      return request.resource.size < 50 * 1024 * 1024 // 50MB limit
        && (request.resource.contentType.matches('application/pdf') ||
            request.resource.contentType.matches('application/json') ||
            request.resource.contentType.matches('text/.*'));
    }
    
    // User avatars
    match /cmp_user_avatars/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImage();
    }
    
    // Scan reports (PDF, JSON exports)
    match /cmp_scan_reports/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && isValidDocument();
    }
    
    // Backup data (for app settings, bookmarks)
    match /cmp_backups/{userId}/{fileName} {
      allow read, write: if isOwner(userId);
    }
    
    // Temporary scan data (for large scans)
    match /cmp_temp_scans/{userId}/{scanId}/{fileName} {
      allow read, write: if isOwner(userId);
    }
    
    // Public assets (app icons, documentation)
    match /cmp_public/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // App updates (for auto-updater)
    match /cmp_updates/{version}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin only via console
    }
  }
}